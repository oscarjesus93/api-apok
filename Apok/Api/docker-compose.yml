version: '3.9' # Versión del formato de Docker Compose

services: # Aquí definimos los servicios que queremos ejecutar
  api: # Servicio de tu API .NET
    build:
      context: . # Ubicación del proyecto (en este caso, el directorio actual)
      dockerfile: Dockerfile # Nombre del archivo Dockerfile para construir la imagen de tu API
    ports:
      - "8081:8080" # Mapea el puerto 8080 del contenedor al puerto 8081 de tu máquina
    depends_on:
      - db # Este servicio depende del servicio 'db', lo que significa que se inicia después de él
    environment:
      - ASPNETCORE_ENVIRONMENT=Development # Establece el entorno de ejecución de tu API
      - defaultConnection=Host=db;Port=5432;Database=db_apok;Username=root;Password=root
    entrypoint: /bin/bash -c "dotnet ef database update && dotnet Api.dll"

  db: # Servicio de PostgreSQL
    image: postgres:15 # Imagen oficial de PostgreSQL, versión 15
    container_name: DB_APOK_CONTAINER # Nombre del contenedor (opcional, pero útil para identificarlo)
    ports:
      - "5432:5432" # Mapea el puerto 5432 del contenedor al puerto 5432 de tu máquina
    environment: # Variables de entorno para configurar PostgreSQL
      POSTGRES_USER: root # Usuario por defecto
      POSTGRES_PASSWORD: root # Contraseña del usuario
      POSTGRES_DB: db_apok # Base de datos que se creará al iniciar
    volumes: # Define un volumen para persistencia de datos
      - pgdata:/var/lib/postgresql/data # Almacena los datos de PostgreSQL fuera del contenedor

volumes: # Configuración de volúmenes para persistencia de datos
  pgdata: # Nombre del volumen para PostgreSQL
